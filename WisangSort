

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;

public class Wisang {


	
	
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		ArrayList<Integer>[] con = new ArrayList[N+1];
		
		for(int i = 1 ; i <= N ; i++) {
			con[i] = new ArrayList<Integer>();
		}
		
		int in[] = new int[N+1];
		
		for (int i = 0 ; i < M ; i++) {
			st = new StringTokenizer(br.readLine());
			int a = Integer.parseInt(st.nextToken());
			int b = Integer.parseInt(st.nextToken());
			
			con[a].add(b);
			in[b]++;
		}
		
		ArrayList order = new ArrayList<>();
		Queue<Integer> que = new LinkedList<>();
		
		
		for (int i = 1 ; i <= N ; i++)  {
			if (in[i] == 0)
				que.add(i);	
		}
		
		while (!que.isEmpty()) {
			int q = que.poll();
			bw.write(String.valueOf(q)+"\n");
			order.add(q);
			
			for(int t : con[q]) {
				if (--in[t] == 0) que.add(t);
			}
		}
		
		bw.flush();
		bw.close();

		
	}
}
